<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fourclover.clobee.card.repository.CardRepository">

    <!-- 카드 : 전체 신용 카드 페이지로 보기 -->
    <select id="allCardPaging" resultType="com.fourclover.clobee.card.domain.CardListDTO">
        SELECT ci.card_info_id,
               ci.card_rank,
               ci.card_name,
               ci.card_brand,
               cci.com_desc AS card_brand_name,
               ci.card_domestic_annual_fee,
               ci.card_global_annual_fee,
               ci.card_type,
               ci.card_image_url
        FROM card_info ci
                 LEFT JOIN com_code_info cci
                           ON ci.card_brand = cci.com_code_cd AND cci.com_group_id = 300
        WHERE ci.card_type = #{cardType}
        ORDER BY ci.card_rank
            LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 카드 : 전체 신용 카드 개수 -->
    <select id="allCardCount" resultType="int">
        SELECT COUNT(*)
        FROM card_info
        WHERE card_type = #{cardType}
    </select>

    <!-- card_info_id로 특정 카드 정보 가져오기 -->
    <select id="findByCardInfoId" resultType="CardListDTO">
        SELECT
            card_info_id, card_rank, card_name,
            card_brand, card_domestic_annual_fee,
            card_global_annual_fee, card_type,
            card_image_url
        FROM card_info
        WHERE card_info_id = #{cardInfoId}
    </select>

    <!-- 카드 : 카드 혜택 상세 보기 -->
    <select id="getCardBenefit" resultType="CardBenefitDetail">
        SELECT card_benefit_id, card_info_id,
               card_benefit_store, card_benefit_desc,
               card_benefit_discnt_price, card_benefit_condition
        FROM card_benefit_detail
        WHERE card_info_id = #{cardInfoId}
    </select>

    <!-- 카드 : 카드사 url 가져오기(카드 신청하기) -->
    <select id="getCardBrandURL" resultType="String">
        SELECT card_brand_url
        FROM card_brand_url_detail
        WHERE card_brand = #{cardBrand}
    </select>

    <!-- 카드 : 카드 신청하기 누르면 card_apply_views 증가 -->
    <update id="updateApplyViews">
        update card_info
        SET card_views = card_views + 1
        WHERE card_info_id = #{cardInfoId}
    </update>

    <!-- 내 카드 : 내 카드 추가 하기 -->
    <insert id="insertUserCard" parameterType="UserCardDetail">
        INSERT INTO user_card_detail (
            user_id, card_info_id, user_card_type,created_at, updated_at
        ) VALUES (
            #{userId}, #{cardInfoId}, #{userCardType}, now(), now()
        )
    </insert>

    <!-- 내 카드 : 내 카드 목록 가져오기 -->
    <select id="getMyCard" resultType="CardListDTO">
        SELECT
            ucd.user_card_id,
            ci.card_info_id,
            ci.card_rank,
            ci.card_name,
            ci.card_brand,
            ci.card_domestic_annual_fee,
            ci.card_global_annual_fee,
            ci.card_type,
            ci.card_image_url
        FROM card_info ci
                 INNER JOIN user_card_detail ucd ON ci.card_info_id = ucd.card_info_id
        WHERE ucd.user_id = #{userId}
    </select>

    <!-- 내 카드 : 검색한 카드 가져오기 -->
    <select id="searchCard" resultType="CardListDTO">
        SELECT
            card_info_id, card_rank, card_name,
            card_brand, card_domestic_annual_fee,
            card_global_annual_fee, card_type,
            card_image_url
        FROM card_info
        WHERE card_name ILIKE #{cardName}
    </select>

    <!-- 내 카드 : 이미 등록한 카드인지 확인 -->
    <select id="existsUserCard" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM user_card_detail
        WHERE user_id = #{userId} AND card_info_id = #{cardInfoId}
    </select>

    <!-- 내 카드 : 실적 추가 -->
    <insert id="insertMonthlyPerformance">
        INSERT INTO user_card_performance_detail
            (user_card_id, year, month, monthly_amount, created_at, updated_at)
        VALUES (#{userCardId}, #{year}, #{month}, #{amount}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
    </insert>

    <!-- 내 카드 : 실적 수정 -->
    <update id="updateMonthlyPerformance">
        UPDATE user_card_performance_detail
        SET monthly_amount = monthly_amount + #{monthlyAmount},
            updated_at = CURRENT_TIMESTAMP
        WHERE user_card_id = #{userCardId}
                  AND year = #{year}
                  AND month = #{month}
    </update>

    <!-- 내 카드 : 실적 조회 -->
    <select id="getPerformance" resultType="UserCardPerformanceDetail">
        SELECT * FROM user_card_performance_detail
        WHERE user_card_id = #{userCardId} AND year = #{year} AND month = #{month}
    </select>

    <!-- 내 카드 : 카드 삭제하기 -->
    <delete id="deleteUserCard">
        DELETE FROM user_card_detail
        WHERE user_id = #{userId} AND card_info_id = #{cardInfoId}
    </delete>


    <!-- 🎯 사용자의 혜택 매장 조회 (한 번의 쿼리로 효율적 처리 - 추천) -->
    <select id="findBenefitStoresByUserId" resultType="String">
        SELECT DISTINCT cbd.card_benefit_store
        FROM user_card_detail ucd
                 INNER JOIN card_benefit_detail cbd ON ucd.card_info_id = cbd.card_info_id
        WHERE ucd.user_id = #{userId}
    </select>

    <select id="findCardBrandByUserId" resultType="com.fourclover.clobee.card.domain.BenefitStoreDTO">
        SELECT DISTINCT
            cbd.card_benefit_store AS cardBenefitStore,
            cci.com_desc AS brand
        FROM user_card_detail ucd
                 INNER JOIN card_benefit_detail cbd ON ucd.card_info_id = cbd.card_info_id
                 INNER JOIN card_info ci ON cbd.card_info_id = ci.card_info_id
                 INNER JOIN com_code_info cci ON ci.card_brand = cci.com_code_cd
        WHERE ucd.user_id = #{userId}
    </select>

    <!-- 카드 혜택 : map에 전송해 줄 내 card 혜택 -->
    <select id="selectCardBenefitsByUserIdAndStore" resultType="CardBenefitDetail">
        SELECT
            cb.card_benefit_id,
            cb.card_info_id,
            cb.card_benefit_store,
            cb.card_benefit_discnt_price,
            cb.card_benefit_desc,
            cb.card_benefit_condition,
            ci.card_name
        FROM
            user_card_detail ucd
                JOIN
            card_info ci ON ucd.card_info_id = ci.card_info_id
                JOIN
            card_benefit_detail cb ON ci.card_info_id = cb.card_info_id
        WHERE
            ucd.user_id = #{userId}
          AND (
            cb.card_benefit_store LIKE CONCAT('%', #{store}, '%')
            )
    </select>

    <!-- 카드 혜택 : map에 전송해 줄 추천 card -->
    <select id="selectRecommendedCardsByStore" resultType="CardBenefitDetail">
        SELECT
            cbd.card_benefit_id,
            cbd.card_info_id ,
            cbd.card_benefit_store,
            cbd.card_benefit_discnt_price,
            cbd.card_benefit_desc,
            cbd.card_benefit_condition,
            ci.card_name,
            ci.card_rank,
            ci.card_image_url
        FROM card_benefit_detail cbd
                 JOIN card_info ci ON cbd.card_info_id = ci.card_info_id
        WHERE cbd.card_benefit_store = #{store}
    </select>

</mapper>